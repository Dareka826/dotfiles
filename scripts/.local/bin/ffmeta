#!/bin/sh
set -eu

SCRIPTS_PATH="$(realpath "$0")"
SCRIPTS_PATH="${SCRIPTS_PATH%/*}/../.."
SCRIPTS_PATH="$(realpath "${SCRIPTS_PATH}")"
. "${SCRIPTS_PATH}/xparse/xparse.sh"

xparse_add_option "tag"   1  do_tag
xparse_add_option "tags" '*' do_tags

xparse_add_option "file"   1  do_file
xparse_add_option "files" '*' do_files

xparse_add_option "print"       0 do_print
xparse_add_option "print_tags"  0 do_print_tags
xparse_add_option "print_files" 0 do_print_files

xparse_add_option "simulate" 0 do_simulate

_FS="$(printf "\034")"
TAGS=""
FILES=""

# args: TAG
do_tag() { # {{{
    local TAG="${1}"
    TAGS="${TAGS}${TAG}${_FS}"
} # }}}

# args: TAG...
do_tags() { # {{{
    for tag in "$@"; do
        do_tag "${tag}"
    done
} # }}}

# args: FILE
do_file() { # {{{
    local FILE="${1}"
    FILES="${FILES}${FILE}${_FS}"
} # }}}

# args: FILE...
do_files() { # {{{
    for file in "$@"; do
        do_file "${file}"
    done
} # }}}

# args:
do_print_tags() { # {{{
    IFS="${_FS}"
    printf "Tags to set:\n"
    printf "  %s\n" ${TAGS}
    printf "\n"
    unset IFS
} # }}}

# args:
do_print_files() { # {{{
    IFS="${_FS}"
    printf "Files to modify:\n"
    printf "  %s\n" ${FILES}
    printf "\n"
    unset IFS
} # }}}

# args:
do_print() { # {{{
    do_print_tags
    do_print_files
} # }}}

SIMULATE="0"
# args:
do_simulate() { SIMULATE="1"; }

# Print command if SIMULATE == 1, else execute it
exec_sim() { # {{{
    if [ "${SIMULATE}" = "1" ]; then
        printf "[I]: Exec:" >&2
        printf " %s" "$@" >&2
        printf "\n" >&2
    else
        "$@"
    fi
} # }}}

xparse_execute_args "$@"

# Tag the files
[ -n "${FILES}" ] || { printf "[E]: No files provided!\n" >&2; exit 1; }
[ -n "${TAGS}"  ] || { printf "[E]: No tags provided!\n" >&2; exit 1; }

FF_TAGS=""
tags_to_ffopts() {
    FF_TAGS=""
    IFS="${_FS}"
    for tag in $TAGS; do
        FF_TAGS="${FF_TAGS}-metadata${_FS}${tag}${_FS}"
    done
    unset IFS
}
tags_to_ffopts

cleanup() { [ -z "${_TMPDIR}" ] || rm -rf "${_TMPDIR}"; }
trap cleanup TERM INT HUP EXIT

_TMPDIR="$(mktemp -d)"

tag_files() {
    IFS="${_FS}"
    for FILE in ${FILES}; do
        local FILE_EXT="${FILE##*.}"
        local TMP_FILE="${_TMPDIR}/out.${FILE_EXT}"

        IFS="${_FS}"
        local SUCCESS="1"
        exec_sim ffmpeg \
            -hide_banner \
            -i "${FILE}" \
            -map_metadata:s:0 0 \
            -map_metadata:g 0 \
            ${FF_TAGS} \
            -c copy \
            "${TMP_FILE}" || SUCCESS="0"

        if [ "${SIMULATE}" != "1" ]; then
            if [ "${SUCCESS}" = "1" ]; then
                mv "${TMP_FILE}" "${FILE}"
            else
                rm -f "${TMP_FILE}"
            fi
        fi
    done
    unset IFS
}
tag_files
