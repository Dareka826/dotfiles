#!/bin/sh

# Get DISPLAY from argv if unset or empty
if [ "${DISPLAY:-}" = "" ]; then
    [ "${#}" -ge 1 ] || exit 1
    DISPLAY="${1}"
fi

# Ensure :
DISPLAY="${DISPLAY#:}"
DISPLAY=":${DISPLAY}"

# Check for target server's existence
netstat --unix --listening | grep X11 | \
    awk '{ print $9 }' | sed 's/.*\/X//' | sort | uniq \
    | grep "${DISPLAY#:}" >/dev/null 2>&1 || exit 1

# Helper vars
_UID="$(id -u)"
_GID="$(id -g)"

TMPDIR="${TMPDIR:-/tmp}"
_HOME="${HOME:-/home/$(id -un)}"

# Generate resolv.conf for slirp4netns
_RESOLV="$(mktemp "${TMPDIR}/x11_jail.XXXXXX")"; chmod 0600 "${_RESOLV}"
cat >"${_RESOLV}" <<'EOF'
nameserver 10.0.2.3
EOF

# Communication file
_NSPID="$(mktemp "${TMPDIR}/x11_jail.XXXXXX")"

# Program to execute in unshared namespace (part 2)
PROG="$(cat <<EOF
cat >'${_NSPID}' <<EOFEOF
\${\$}
EOFEOF

bwrap \
    --bind / / \
    --dev-bind /dev /dev \
    --tmpfs /tmp \
    --bind '/tmp/.X11-unix/X${DISPLAY#:}'  '/tmp/.X11-unix/X${DISPLAY#:}' \
    --tmpfs /run \
    --bind '/run/user/${_UID}/pipewire-0' '/run/user/${_UID}/pipewire-0' \
    --bind '/run/user/${_UID}/pulse'      '/run/user/${_UID}/pulse' \
    --ro-bind '${_RESOLV}' /etc/resolv.conf \
        bash

rm '${_NSPID}'
EOF
)"

# Run slirp4netns after the namespace get created and stop after it exits
{
    # Wait for unshare to start
    while [ "$(stat -c"%s" "${_NSPID}")" = "0" ]; do sleep 0.1; done
    UNSHARE_PID="$(cat "${_NSPID}")"

    # Run slirp4netns
    SLIRP_LOG="$(mktemp "${TMPDIR}/x11_jail.slirp4netns_log.XXXXXX")"
    slirp4netns \
        --configure \
        --mtu=65520 \
        "${UNSHARE_PID}" \
        tap0 >"${SLIRP_LOG}" 2>&1 &
    SLIRP_PID="${!}"

    # Wait for unshare to stop
    while [ -e "${_NSPID}" ]; do sleep 10; done
    kill "${SLIRP_PID}"

    # Remove slirp4netns's log after 10 mins
    /bin/sh -c "{ sleep 600; rm '${SLIRP_LOG}'; } &" &
} &

# Create the network namespace
unshare \
    --user \
    -c \
    --net \
    /bin/sh -c "${PROG}"

# Remove temporary files
rm "${_RESOLV}"
