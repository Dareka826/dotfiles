#!/bin/sh
set -eu

get_metadata_json() {
    local URL="${1}"
    shift 1

    yt-dlp -f bestaudio -j "${URL}" \
        | jq '{
            id,
            title,
            fulltitle,
            alt_title,
            channel,
            channel_id,
            uploader_id,
            description,
            english_translated: '"$(\
                yt-dlp -f bestaudio -j \
                    --extractor-args 'youtube:lang=en' "${URL}" \
                    | jq -c '{ title, fulltitle, description }')"',
            timestamp,
            upload_date,
            release_timestamp,
            release_date,
            release_year,
            tags,
            artists,
            creators,
            album,
            album_artists,
            track,
            track_number
        } | if (.title == .english_translated.title and
                .fulltitle == .english_translated.fulltitle and
                .description == .english_translated.description) then
                    del(.english_translated)
            else . end'
}

download() {
    local URL="${1}"
    shift 1

    yt-dlp \
        --no-mtime \
        -x \
        -o "%(id)s.%(ext)s" \
        -f 'bestaudio[acodec=opus]/best[acodec=opus]/bestaudio/best' \
        --write-thumbnail \
        "${URL}"
}

[ -n "${1}" ] || exit 1

_ORG_DIR_="$(pwd)"

_TMP_DIR_=""
cleanup() {
    [ -n "${_TMP_DIR_}" ] \
        && [ -e "${_TMP_DIR_}" ] \
        && rm -rf "${_TMP_DIR_}" || :
}
trap cleanup TERM INT HUP EXIT
_TMP_DIR_="$(mktemp -d)"

cd "${_TMP_DIR_}"

download "${1}"
get_metadata_json "${1}" > "./info.json"

DIR_NAME="$(cat info.json \
    | jq -r '"[" + ([ if .uploader_id == null then .channel_id else .uploader_id end, .upload_date, .id ] | join("]_[")) + "]"')"
mkdir "${_ORG_DIR_}/${DIR_NAME}"
cd "${_ORG_DIR_}/${DIR_NAME}"

mv "${_TMP_DIR_}"/* ./
