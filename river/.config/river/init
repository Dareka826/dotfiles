#!/bin/sh

# Vars
TERMINAL="foot"
WOBSOCK="${XDG_RUNTIME_DIR}/wob.sock"
rm -f "${WOBSOCK}" && mkfifo "${WOBSOCK}" && tail -f "${WOBSOCK}" | wob -t 1000 -o 2 -b 4 -p 2 --border-color '#ffffffff' --background-color '#111111ff' --bar-color '#ffffffff' --overflow-mode wrap --overflow-bar-color '#ff6600ff' &

# Gtk theming
gsettings set org.gnome.desktop.interface gtk-theme    "Materia-dark-compact"
gsettings set org.gnome.desktop.interface icon-theme   "Papirus-Dark"
gsettings set org.gnome.desktop.interface cursor-theme "Suwako"
gsettings set org.gnome.desktop.interface font-name    "Source Code Pro 10"
gsettings set org.gnome.desktop.interface color-scheme "prefer-dark"

# Wallpaper
swaybg -m fill -i "${HOME}/Wallpapers/Yagate_Kimi_ni_Naru_Yuu_Touko_Lanterns_Crop.jpg" &

# Start programs
waybar &
mako &

xrdb ~/.Xresources
unclutter --timeout 1 -b

cp ~/.bashrc /mnt/tmp/

## Mappings
riverctl map normal Mod1 Return spawn "${TERMINAL}" # Spawn terminal
riverctl map normal Mod1+Shift Q exit # Exit river
riverctl map normal Mod1 D spawn "${HOME}/.local/bin/dmenu_hisfreq"

riverctl map normal Mod1 L spawn "${HOME}/.local/bin/wlock.sh"
riverctl map normal Control F12 spawn "cd ${HOME}/Screenshots; grim"

# Windows
riverctl map normal Mod1+Shift c close # Close window
riverctl map normal Mod1 J focus-view next     # Focus next win
riverctl map normal Mod1 K focus-view previous # Focus prev win
riverctl map normal Mod1+Shift J swap next     # Swap with next win
riverctl map normal Mod1+Shift K swap previous # Swap with prev win
riverctl map normal Mod1+Shift Return zoom # Bump to top of stack

# Screens
riverctl map normal Mod1 Period focus-output next     # Focus next scr
riverctl map normal Mod1 Comma  focus-output previous # Focus prev scr
riverctl map normal Mod1+Shift Period send-to-output next     # Move win to next scr
riverctl map normal Mod1+Shift Comma  send-to-output previous # Move win to prev scr

# Layout
riverctl map normal Mod1+Shift H send-layout-cmd rivercarro "main-ratio -0.05" # Decrease master ratio
riverctl map normal Mod1+Shift L send-layout-cmd rivercarro "main-ratio +0.05" # Increase master ratio
riverctl map normal Mod1+Shift I send-layout-cmd rivercarro "main-count +1" # Increate master win count
riverctl map normal Mod1+Shift D send-layout-cmd rivercarro "main-count -1" # Decrease master win count
riverctl map normal Mod1 T send-layout-cmd rivercarro "main-location left" # Tiling layout
riverctl map normal Mod1 M send-layout-cmd rivercarro "main-location monocle" # Monocle layout

# Toggle stuff
riverctl map normal Mod1+Shift Space toggle-float      # Toggle floating
riverctl map normal Mod1+Shift F     toggle-fullscreen # Toggle fullscreen

# Mouse
riverctl map-pointer normal Mod1 BTN_LEFT  move-view   # Mouse drag
riverctl map-pointer normal Mod1 BTN_RIGHT resize-view # Mouse resize

# Manipulating windows
riverctl declare-mode move
riverctl map normal Mod1+Shift M enter-mode move
riverctl map move   Mod1+Shift M enter-mode normal
riverctl map move   None       Escape enter-mode normal

riverctl map move Mod1         H move left  10
riverctl map move Mod1         J move down  10
riverctl map move Mod1         K move up    10
riverctl map move Mod1         L move right 10
riverctl map move Mod1+Control H move left  1
riverctl map move Mod1+Control J move down  1
riverctl map move Mod1+Control K move up    1
riverctl map move Mod1+Control L move right 1
riverctl map move Mod1+Shift   H move left  100
riverctl map move Mod1+Shift   J move down  100
riverctl map move Mod1+Shift   K move up    100
riverctl map move Mod1+Shift   L move right 100

riverctl declare-mode resize
riverctl map normal Mod1+Shift R enter-mode resize
riverctl map resize Mod1+Shift R enter-mode normal
riverctl map resize None       Escape enter-mode normal

riverctl map resize Mod1         H resize horizontal -10
riverctl map resize Mod1         J resize vertical    10
riverctl map resize Mod1         K resize vertical   -10
riverctl map resize Mod1         L resize horizontal  10
riverctl map resize Mod1+Control H resize horizontal -1
riverctl map resize Mod1+Control J resize vertical    1
riverctl map resize Mod1+Control K resize vertical   -1
riverctl map resize Mod1+Control L resize horizontal  1
riverctl map resize Mod1+Shift   H resize horizontal -100
riverctl map resize Mod1+Shift   J resize vertical    100
riverctl map resize Mod1+Shift   K resize vertical   -100
riverctl map resize Mod1+Shift   L resize horizontal  100

# Snap windows to screen edges
riverctl map normal Mod1+Control H snap left
riverctl map normal Mod1+Control J snap down
riverctl map normal Mod1+Control K snap up
riverctl map normal Mod1+Control L snap right

# Media
riverctl map -repeat normal Mod1+Control Up   spawn "pamixer --allow-boost --increase 5 && pamixer --get-volume >\"${WOBSOCK}\""
riverctl map -repeat normal Mod1+Control Down spawn "pamixer --allow-boost --decrease 5 && pamixer --get-volume >\"${WOBSOCK}\""
riverctl map         normal Mod1+Control M    spawn 'pamixer --toggle-mute && { [ "$(pamixer --get-mute)" = "true" ] && echo 0 >"'"${WOBSOCK}"'"; } || pamixer --get-volume >"'"${WOBSOCK}"'"'

for mode in normal locked; do
    # Eject the optical drive
    riverctl map "${mode}" None XF86Eject spawn "eject -T"

    # Control pulse audio volume with pamixer
    riverctl map -repeat "${mode}" None XF86AudioRaiseVolume spawn "pamixer --allow-boost --increase 5 && pamixer --get-volume >\"${WOBSOCK}\""
    riverctl map -repeat "${mode}" None XF86AudioLowerVolume spawn "pamixer --allow-boost --decrease 5 && pamixer --get-volume >\"${WOBSOCK}\""
    riverctl map         "${mode}" None XF86AudioMute        spawn "pamixer --toggle-mute"

    # Control MPRIS aware media players with playerctl
    #riverctl map "${mode}" None XF86AudioPlay spawn "playerctl play-pause"
    #riverctl map "${mode}" None XF86AudioPrev spawn "playerctl previous"
    #riverctl map "${mode}" None XF86AudioNext spawn "playerctl next"

    # Control cmus
    riverctl map "${mode}" None XF86AudioPlay spawn "cmus-remote --pause"
    riverctl map "${mode}" None XF86AudioStop spawn "cmus-remote --stop"
    riverctl map "${mode}" None XF86AudioPrev spawn "cmus-remote --prev"
    riverctl map "${mode}" None XF86AudioNext spawn "cmus-remote --next"

    # Control screen backlight brightness
    riverctl map "${mode}" None XF86MonBrightnessUp   spawn "xbacklight -inc 5 && xbacklight -get >\"${WOBSOCK}\""
    riverctl map "${mode}" None XF86MonBrightnessDown spawn "xbacklight -dec 5 && xbacklight -get >\"${WOBSOCK}\""
done

# passthrough mode
riverctl declare-mode passthrough
riverctl map normal      Super F11 enter-mode passthrough
riverctl map passthrough Super F11 enter-mode normal

## Tags
# Access more tags than numbers on keyboard
riverctl declare-mode moretag
riverctl map normal  Mod1+Shift Grave enter-mode moretag # Enter moretag mode
riverctl map moretag Mod1+Shift Grave enter-mode normal  # Go back to normal mode
riverctl map moretag None       Escape enter-mode normal

# Standard tags
for i in $(seq 1 10); do
    tags="$(( 1 << (i - 1) ))"
    j="$(( i % 10 ))"

    for mode in normal moretag; do
        riverctl map "${mode}" Mod1               "${j}" set-focused-tags    "${tags}" # Focus tag
        riverctl map "${mode}" Mod1+Shift         "${j}" set-view-tags       "${tags}" # Set tag on focused win
        riverctl map "${mode}" Mod1+Control       "${j}" toggle-focused-tags "${tags}" # Toggle tag focus
        riverctl map "${mode}" Mod1+Shift+Control "${j}" toggle-view-tags    "${tags}" # Toggle tag on focused win
    done
done
riverctl map normal Mod1       Tab focus-previous-tags
riverctl map normal Mod1+Shift Tab send-to-previous-tags

# Map tags 11-32 to keys A-V
for i in $(seq 11 32); do
    tags="$(( 1 << (i - 1) ))" # Choose one tag
    KEY_CODE="$(( i - 11 + $(printf "%d" "'A") ))"       # Choose letter based on tag number
    KEY_CHAR="$(printf "\\$(printf "%03o" "${KEY_CODE}")")" # Convert key code to ascii

    # Exit moretag mode after the desired action
    riverctl map moretag Mod1               "${KEY_CHAR}" set-focused-tags    "${tags}" # Focus tag
    riverctl map moretag Mod1+Shift         "${KEY_CHAR}" set-view-tags       "${tags}" # Set tag on focused win
    riverctl map moretag Mod1+Control       "${KEY_CHAR}" toggle-focused-tags "${tags}" # Toggle tag focus
    riverctl map moretag Mod1+Shift+Control "${KEY_CHAR}" toggle-view-tags    "${tags}" # Toggle tag on focused win
done

## Config
riverctl attach-mode top
riverctl background-color 0x111111

riverctl border-color-focused 0x6633FF
riverctl border-color-unfocused 0x444444
riverctl border-color-urgent 0xFF6600
riverctl border-width 2

riverctl focus-follows-cursor normal
riverctl set-cursor-warp disabled
riverctl xcursor-theme Suwako
#riverctl set-repeat 50 400

# Make certain views start floating
#riverctl float-filter-add app-id float
#riverctl float-filter-add title "popup title with spaces"

# Set app-ids and titles of views which should use client side decorations
#riverctl csd-filter-add app-id "gedit"

# Set the default layout generator and start it
riverctl default-layout rivercarro
rivercarro -main-location left -main-count 1 -main-ratio 0.6 -outer-gaps 0 -inner-gaps 0 -no-smart-gaps
